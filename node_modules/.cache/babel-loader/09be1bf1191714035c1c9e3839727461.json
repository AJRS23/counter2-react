{"ast":null,"code":"import _classCallCheck from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/login/login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './login.css';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      user: \"Alvaro\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.increase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Login\"));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count,\n    listCounters: state.listCounters\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onDeleteCounter: function onDeleteCounter(indexCounter) {\n      dispatch({\n        type: 'DELETE_COUNTER',\n        indexCounter: indexCounter\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/login/login.js"],"names":["React","Component","connect","Link","Login","props","state","user","increase","mapStateToProps","count","listCounters","mapDispatchToProps","dispatch","onDeleteCounter","indexCounter","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,aAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAHe;AAQlB;;;;6BAMQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ;AAMH;;;;EAvBeP,S;;AAyBpB,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AAC/B,SAAO;AACHI,IAAAA,KAAK,EAAEJ,KAAK,CAACI,KADV;AAEHC,IAAAA,YAAY,EAAEL,KAAK,CAACK;AAFjB,GAAP;AAIH,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHC,IAAAA,eAAe,EAAE,yBAACC,YAAD,EAAkB;AAC/BF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,gBAAR;AAA0BD,QAAAA,YAAY,EAAZA;AAA1B,OAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAOA,eAAeb,OAAO,CAACO,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './login.css'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: \"Alvaro\",\n        };\n\n\n    }\n\n\n\n\n\n    render() {\n\n        return (\n            <div >\n                <button onClick={this.increase}>Login</button>\n\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.count,\n        listCounters: state.listCounters\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDeleteCounter: (indexCounter) => {\n            dispatch({ type: 'DELETE_COUNTER', indexCounter });\n        }\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}