{"ast":null,"code":"import _classCallCheck from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/counter-container/counter-container.js\";\nimport React, { Component } from 'react';\nimport CounterItem from '../counter-item/counter-item';\nimport { connect } from 'react-redux';\n\nvar CounterContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CounterContainer, _Component);\n\n  function CounterContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CounterContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CounterContainer).call(this, props));\n    _this.state = {\n      clickCount: 0\n    };\n\n    _this.increase = function () {\n      _this.setState(function (_ref) {\n        var clickCount = _ref.clickCount;\n        return {\n          clickCount: clickCount + 1\n        };\n      });\n    };\n\n    _this.reset = function () {\n      _this.setState(function (_ref2) {\n        var clickCount = _ref2.clickCount;\n        return {\n          clickCount: 0\n        };\n      });\n    };\n\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CounterContainer, [{\n    key: \"handleSelected\",\n    value: function handleSelected(indexCounter) {\n      this.props.onDeleteCounter(indexCounter);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.id);\n      console.log(this.props.ind);\n      return React.createElement(\"div\", {\n        className: \"counter-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.increase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.clickCount), React.createElement(\"button\", {\n        className: \"Delete-button\",\n        onClick: function onClick() {\n          _this2.handleSelected(_this2.props.ind);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Delete counter\"), React.createElement(\"button\", {\n        className: \"Reset-button\",\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"button\", {\n        className: \"Block-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Block counter\"));\n    }\n  }]);\n\n  return CounterContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count,\n    listCounters: state.listCounters\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onDeleteCounter: function onDeleteCounter(indexCounter) {\n      dispatch({\n        type: 'DELETE_COUNTER',\n        indexCounter: indexCounter\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterContainer);","map":{"version":3,"sources":["/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/counter-container/counter-container.js"],"names":["React","Component","CounterItem","connect","CounterContainer","props","state","clickCount","increase","setState","reset","handleSelected","bind","indexCounter","onDeleteCounter","console","log","id","ind","mapStateToProps","count","listCounters","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,gB;;;;;AAMF,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;AADe,UAJnBC,KAImB,GAJX;AACJC,MAAAA,UAAU,EAAE;AADR,KAIW;;AAAA,UAMnBC,QANmB,GAMR,YAAM;AACb,YAAKC,QAAL,CAAc;AAAA,YAAGF,UAAH,QAAGA,UAAH;AAAA,eAAqB;AAC/BA,UAAAA,UAAU,EAAEA,UAAU,GAAG;AADM,SAArB;AAAA,OAAd;AAGH,KAVkB;;AAAA,UAWnBG,KAXmB,GAWX,YAAM;AACV,YAAKD,QAAL,CAAc;AAAA,YAAGF,UAAH,SAAGA,UAAH;AAAA,eAAqB;AAC/BA,UAAAA,UAAU,EAAE;AADmB,SAArB;AAAA,OAAd;AAGH,KAfkB;;AAGf,UAAKI,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AAHe;AAIlB;;;;mCAacC,Y,EAAc;AACzB,WAAKR,KAAL,CAAWS,eAAX,CAA2BD,YAA3B;AACH;;;6BACQ;AAAA;;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWY,EAAvB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWa,GAAvB;AACA,aACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKV,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKF,KAAL,CAAWC,UAA5C,CADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACI,cAAL,CAAoB,MAAI,CAACN,KAAL,CAAWa,GAA/B;AAAqC,SAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAGI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,KAAKR,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,CADJ;AAQH;;;;EArC0BT,S;;AAuC/B,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACb,KAAD,EAAW;AAC/B,SAAO;AACHc,IAAAA,KAAK,EAAEd,KAAK,CAACc,KADV;AAEHC,IAAAA,YAAY,EAAEf,KAAK,CAACe;AAFjB,GAAP;AAIH,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHT,IAAAA,eAAe,EAAE,yBAACD,YAAD,EAAkB;AAC/BU,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,gBAAR;AAA0BX,QAAAA,YAAY,EAAZA;AAA1B,OAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAOA,eAAeV,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport CounterItem from '../counter-item/counter-item'\nimport { connect } from 'react-redux';\n\nclass CounterContainer extends Component {\n\n    state = {\n        clickCount: 0\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n\n    increase = () => {\n        this.setState(({ clickCount }) => ({\n            clickCount: clickCount + 1\n        }));\n    };\n    reset = () => {\n        this.setState(({ clickCount }) => ({\n            clickCount: 0\n        }));\n    }\n\n    handleSelected(indexCounter) {\n        this.props.onDeleteCounter(indexCounter);\n    }\n    render() {\n        console.log(this.props.id);\n        console.log(this.props.ind);\n        return (\n            <div className=\"counter-container\">\n                <button onClick={this.increase}>{this.state.clickCount}</button>\n                <button className=\"Delete-button\" onClick={() => { this.handleSelected(this.props.ind) }}>Delete counter</button>\n                <button className=\"Reset-button\" onClick={this.reset}>Reset</button>\n                <button className=\"Block-button\" >Block counter</button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.count,\n        listCounters: state.listCounters\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDeleteCounter: (indexCounter) => {\n            dispatch({ type: 'DELETE_COUNTER', indexCounter });\n        }\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterContainer);"]},"metadata":{},"sourceType":"module"}