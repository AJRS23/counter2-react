{"ast":null,"code":"import _classCallCheck from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Title from './components/title/title';\nimport CounterContainer from './components/counter-container/counter-container';\nimport CounterForms from './components/counter-forms/counter-forms';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleSelected\",\n    value: function handleSelected() {\n      this.props.onAddCounter();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.listCounters);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(Title, {\n        count: this.props.count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"App-button\",\n        onClick: function onClick() {\n          _this2.handleSelected();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Add counter\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.listCounters.map(function (idCounter) {\n        return React.createElement(CounterContainer, {\n          key: idCounter,\n          id: idCounter,\n          ind: _this2.props.listCounters.indexOf(idCounter),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count,\n    listCounters: state.listCounters\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAddCounter: function onAddCounter() {\n      dispatch({\n        type: 'ADD_COUNTER'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/App.js"],"names":["React","Component","Title","CounterContainer","CounterForms","connect","App","props","handleSelected","bind","onAddCounter","console","log","listCounters","count","map","idCounter","indexOf","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,gBAAP,MAA6B,kDAA7B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AAHiB;AAIlB;;;;qCAEgB;AACf,WAAKF,KAAL,CAAWG,YAAX;AACD;;;6BAKQ;AAAA;;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,YAAvB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,EAQE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACN,cAAL;AAAuB,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWM,YAAX,CAAwBE,GAAxB,CAA4B,UAAAC,SAAS;AAAA,eAAI,oBAAC,gBAAD;AAAkB,UAAA,GAAG,EAAEA,SAAvB;AAAkC,UAAA,EAAE,EAAEA,SAAtC;AACxC,UAAA,GAAG,EAAE,MAAI,CAACT,KAAL,CAAWM,YAAX,CAAwBI,OAAxB,CAAgCD,SAAhC,CADmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAArC,CADH,CAZF,CADF;AAmBD;;;;EAnCef,S;;AAsClB,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLL,IAAAA,KAAK,EAAEK,KAAK,CAACL,KADR;AAELD,IAAAA,YAAY,EAAEM,KAAK,CAACN;AAFf,GAAP;AAID,CALD;;AAOA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLX,IAAAA,YAAY,EAAE,wBAAM;AAClBW,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAejB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Title from './components/title/title'\nimport CounterContainer from './components/counter-container/counter-container'\nimport CounterForms from './components/counter-forms/counter-forms'\nimport './App.css';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelected = this.handleSelected.bind(this);\n  }\n\n  handleSelected() {\n    this.props.onAddCounter();\n  }\n\n\n\n\n  render() {\n    console.log(this.props.listCounters);\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <form>\n            <label>\n              Name:\n              <input type=\"text\" name=\"name\" />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n          <Title count={this.props.count} />\n          <button className=\"App-button\" onClick={() => { this.handleSelected() }}>Add counter</button>\n        </header>\n        <div>\n          {this.props.listCounters.map(idCounter => <CounterContainer key={idCounter} id={idCounter}\n            ind={this.props.listCounters.indexOf(idCounter)} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    count: state.count,\n    listCounters: state.listCounters\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddCounter: () => {\n      dispatch({ type: 'ADD_COUNTER' });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}