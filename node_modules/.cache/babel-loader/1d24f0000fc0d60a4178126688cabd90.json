{"ast":null,"code":"import _objectSpread from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\nvar initialState = {\n  listCounters: [],\n  count: 0\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_COUNTER':\n      return Object.assign({}, state, {\n        listCounters: [].concat(_toConsumableArray(state.listCounters), [+new Date()]),\n        count: state.count + 1\n      });\n\n    case 'DELETE_COUNTER':\n      var newCounters = _toConsumableArray(state.listCounters);\n\n      newCounters.splice(action.indexCounter, 1);\n      return _objectSpread({}, state, {\n        listCounters: newCounters,\n        count: state.count - 1\n      });\n\n    case 'RESET_COUNTER':\n      return Object.assign({}, state, {\n        listCounters: []\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar store = Redux.createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(React.createElement(ReactRedux.Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n})), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Redux","ReactRedux","initialState","listCounters","count","reducer","state","action","type","Object","assign","Date","newCounters","splice","indexCounter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById","unregister"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,aAA5B;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAKA,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAOC,MAAM,CAACC,MAAP,CACH,EADG,EAEHJ,KAFG,EAEI;AACHH,QAAAA,YAAY,+BAAMG,KAAK,CAACH,YAAZ,IAA0B,CAAC,IAAIQ,IAAJ,EAA3B,EADT;AAEHP,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFlB,OAFJ,CAAP;;AAMJ,SAAK,gBAAL;AACI,UAAIQ,WAAW,sBACRN,KAAK,CAACH,YADE,CAAf;;AAGAS,MAAAA,WAAW,CAACC,MAAZ,CAAmBN,MAAM,CAACO,YAA1B,EAAwC,CAAxC;AACA,+BACOR,KADP;AAEIH,QAAAA,YAAY,EAAES,WAFlB;AAGIR,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAHzB;;AAKJ,SAAK,eAAL;AACI,aAAOK,MAAM,CAACC,MAAP,CACH,EADG,EAEHJ,KAFG,EAEI;AACHH,QAAAA,YAAY,EAAE;AADX,OAFJ,CAAP;;AAMJ;AACI,aAAOG,KAAP;AA1BR;AA4BH;;AAED,IAAIS,KAAK,GAAGf,KAAK,CAACgB,WAAN,CACRX,OADQ,EAERY,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAF/B,CAAZ;AAKArB,QAAQ,CAACsB,MAAT,CAEI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,EAAA,KAAK,EAAEJ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAFJ,EAMIK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ;AAQAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\n\n\nconst initialState = {\n    listCounters: [],\n    count: 0\n};\n\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n        case 'ADD_COUNTER':\n            return Object.assign(\n                {},\n                state, {\n                    listCounters: [...state.listCounters, +new Date()],\n                    count: state.count + 1\n                });\n        case 'DELETE_COUNTER':\n            let newCounters = [\n                ...state.listCounters\n            ];\n            newCounters.splice(action.indexCounter, 1);\n            return {\n                ...state,\n                listCounters: newCounters,\n                count: state.count - 1\n            };\n        case 'RESET_COUNTER':\n            return Object.assign(\n                {},\n                state, {\n                    listCounters: []\n                }\n            )\n        default:\n            return state;\n    }\n}\n\nlet store = Redux.createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nReactDOM.render(\n\n    <ReactRedux.Provider store={store}>\n        <App />\n    </ReactRedux.Provider>,\n\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}