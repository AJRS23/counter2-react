{"ast":null,"code":"import _classCallCheck from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/counter-container/counter-container.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './counter-container.css';\nimport { withRouter } from 'react-router-dom';\n\nvar CounterContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CounterContainer, _Component);\n\n  function CounterContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CounterContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CounterContainer).call(this, props));\n\n    _this.increase = function () {\n      if (!_this.props.coun.blocked) {\n        /*if(this.props.coun.isFirst){\n            this.setState(({firstTime}) => ({\n                firstClick: new Date() \n            }));\n            this.setState(({isFirst}) => ({\n                isFirst: false \n            }));\n        }*/\n        _this.props.onIncreaseCounter(_this.props.ind);\n        /*\n        this.setState(({ lastClick }) => ({\n            lastClick: new Date()\n        }));\n        */\n\n      }\n    };\n\n    _this.reset = function () {\n      _this.setState(function (_ref) {\n        var clickCount = _ref.clickCount;\n        return {\n          clickCount: 0\n        };\n      });\n    };\n\n    _this.block = function () {\n      _this.setState(function (_ref2) {\n        var blocked = _ref2.blocked;\n        return {\n          blocked: !_this.state.blocked\n        };\n      });\n    };\n\n    _this.details = function () {\n      _this.props.history.push(\"/details\");\n    };\n\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CounterContainer, [{\n    key: \"handleSelected\",\n    value: function handleSelected(indexCounter) {\n      this.props.onDeleteCounter(indexCounter);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var counter_container = \"counter-container\";\n\n      if (this.props.coun.blocked) {\n        counter_container += \" blocked\";\n      }\n\n      console.log(this.props.id);\n      console.log(this.props.ind); //console.log(this.props.coun);\n\n      return React.createElement(\"div\", {\n        className: counter_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.increase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.coun.clickCount), React.createElement(\"button\", {\n        className: \"Delete-button\",\n        onClick: function onClick() {\n          _this2.handleSelected(_this2.props.ind);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: \"Reset-button\",\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"button\", {\n        className: \"Block-button\",\n        onClick: this.block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Block\"));\n    }\n  }]);\n\n  return CounterContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count,\n    listCounters: state.listCounters\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onDeleteCounter: function onDeleteCounter(indexCounter) {\n      dispatch({\n        type: 'DELETE_COUNTER',\n        indexCounter: indexCounter\n      });\n    },\n    onIncreaseCounter: function onIncreaseCounter(indexCounter) {\n      dispatch({\n        type: 'INCREASE_COUNTER',\n        indexCounter: indexCounter\n      });\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CounterContainer));","map":{"version":3,"sources":["/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/counter-container/counter-container.js"],"names":["React","Component","connect","withRouter","CounterContainer","props","increase","coun","blocked","onIncreaseCounter","ind","reset","setState","clickCount","block","state","details","history","push","handleSelected","bind","indexCounter","onDeleteCounter","counter_container","console","log","id","mapStateToProps","count","listCounters","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './counter-container.css';\nimport {withRouter} from 'react-router-dom';\n\nclass CounterContainer extends Component {\n\n\n\n    constructor(props) {\n        super(props);\n\n        \n\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n\n    increase = () => {\n        if (!this.props.coun.blocked) {\n            /*if(this.props.coun.isFirst){\n                this.setState(({firstTime}) => ({\n                    firstClick: new Date() \n                }));\n                this.setState(({isFirst}) => ({\n                    isFirst: false \n                }));\n            }*/\n\n            this.props.onIncreaseCounter(this.props.ind);\n            /*\n            this.setState(({ lastClick }) => ({\n                lastClick: new Date()\n            }));\n*/\n        }\n\n    };\n    reset = () => {\n        this.setState(({ clickCount }) => ({\n            clickCount: 0\n        }));\n    }\n    block = () => {\n        this.setState(({ blocked }) => ({\n            blocked: !(this.state.blocked)\n        }));\n    }\n    details = () => {\n        this.props.history.push(`/details`);\n    }\n\n    handleSelected(indexCounter) {\n        this.props.onDeleteCounter(indexCounter);\n    }\n\n    render() {\n        let counter_container = \"counter-container\"\n        if (this.props.coun.blocked) {\n            counter_container += \" blocked\"\n        }\n        console.log(this.props.id);\n        console.log(this.props.ind);\n        //console.log(this.props.coun);\n        return (\n            <div className={counter_container}>\n                <button onClick={this.increase}>{this.props.coun.clickCount}</button>\n                <button className=\"Delete-button\" onClick={() => { this.handleSelected(this.props.ind) }}>Delete</button>\n                <button className=\"Reset-button\" onClick={this.reset}>Reset</button>\n                <button className=\"Block-button\" onClick={this.block}>Block</button>\n                \n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.count,\n        listCounters: state.listCounters\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDeleteCounter: (indexCounter) => {\n            dispatch({ type: 'DELETE_COUNTER', indexCounter });\n        },\n        onIncreaseCounter: (indexCounter) => {\n            dispatch({type: 'INCREASE_COUNTER', indexCounter});\n        }\n    };\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CounterContainer));"]},"metadata":{},"sourceType":"module"}