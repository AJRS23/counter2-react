{"ast":null,"code":"import _classCallCheck from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/counter-forms/counter-forms.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './counter-forms.css';\n\nvar LimitForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LimitForm, _Component);\n\n  function LimitForm(props) {\n    var _this;\n\n    _classCallCheck(this, LimitForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LimitForm).call(this, props));\n    _this.state = {\n      value: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LimitForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n      this.props.onAddLimit(this.state.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Limit:\", React.createElement(\"input\", {\n        type: \"number\",\n        min: this.props.listCounters.length,\n        max: \"100\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LimitForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listCounters: state.listCounters,\n    countersLimit: state.countersLimit\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAddLimit: function onAddLimit(countersLimit) {\n      dispatch({\n        type: 'ADD_LIMIT',\n        countersLimit: countersLimit\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LimitForm);","map":{"version":3,"sources":["/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/counter-forms/counter-forms.js"],"names":["React","Component","connect","LimitForm","props","state","value","handleChange","bind","handleSubmit","event","setState","target","alert","preventDefault","onAddLimit","listCounters","length","mapStateToProps","countersLimit","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,qBAAP;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAEA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AALe;AAMlB;;;;iCAEYE,K,EAAO;AAChB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAAtB,OAAd;AACH;;;iCAEYI,K,EAAO;AAChBG,MAAAA,KAAK,CAAC,2BAA2B,KAAKR,KAAL,CAAWC,KAAvC,CAAL;AACAI,MAAAA,KAAK,CAACI,cAAN;AACA,WAAKV,KAAL,CAAWW,UAAX,CAAsB,KAAKV,KAAL,CAAWC,KAAjC;AAGH;;;6BAEQ;AACL,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEJ;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWY,YAAX,CAAwBC,MAAlD;AAA0D,QAAA,GAAG,EAAC,KAA9D;AAAoE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KAAtF;AAA6F,QAAA,QAAQ,EAAE,KAAKC,YAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI,CADJ,EAKI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;;;EA/BmBN,S;;AAiCxB,IAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACb,KAAD,EAAW;AAC/B,SAAO;AACHW,IAAAA,YAAY,EAAEX,KAAK,CAACW,YADjB;AAEHG,IAAAA,aAAa,EAAEd,KAAK,CAACc;AAFlB,GAAP;AAIH,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHN,IAAAA,UAAU,EAAE,oBAACI,aAAD,EAAmB;AAC3BE,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBH,QAAAA,aAAa,EAAbA;AAArB,OAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAejB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './counter-forms.css'\n\nclass LimitForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '' };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n        this.props.onAddLimit(this.state.value);\n\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Limit:\n            <input type=\"number\" min={this.props.listCounters.length} max=\"100\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        listCounters: state.listCounters,\n        countersLimit: state.countersLimit\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddLimit: (countersLimit) => {\n            dispatch({ type: 'ADD_LIMIT', countersLimit });\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LimitForm);"]},"metadata":{},"sourceType":"module"}