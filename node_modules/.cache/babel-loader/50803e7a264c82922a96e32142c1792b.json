{"ast":null,"code":"import _classCallCheck from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/counter-container/counter-container.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './counter-container.css';\nimport { withRouter } from 'react-router-dom';\n\nvar CounterContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CounterContainer, _Component);\n\n  function CounterContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CounterContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CounterContainer).call(this, props));\n\n    _this.increase = function () {\n      if (!_this.state.blocked) {\n        if (_this.state.isFirst) {\n          _this.setState(function (_ref) {\n            var firstTime = _ref.firstTime;\n            return {\n              firstClick: new Date()\n            };\n          });\n\n          _this.setState(function (_ref2) {\n            var isFirst = _ref2.isFirst;\n            return {\n              isFirst: false\n            };\n          });\n        }\n\n        _this.setState(function (_ref3) {\n          var clickCount = _ref3.clickCount;\n          return {\n            clickCount: clickCount + 1\n          };\n        });\n\n        _this.setState(function (_ref4) {\n          var lastClick = _ref4.lastClick;\n          return {\n            lastClick: new Date()\n          };\n        });\n      }\n    };\n\n    _this.reset = function () {\n      _this.setState(function (_ref5) {\n        var clickCount = _ref5.clickCount;\n        return {\n          clickCount: 0\n        };\n      });\n    };\n\n    _this.block = function () {\n      _this.setState(function (_ref6) {\n        var blocked = _ref6.blocked;\n        return {\n          blocked: !_this.state.blocked\n        };\n      });\n    };\n\n    _this.details = function () {\n      _this.props.history.push(\"/details\");\n    };\n\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CounterContainer, [{\n    key: \"handleSelected\",\n    value: function handleSelected(indexCounter) {\n      this.props.onDeleteCounter(indexCounter);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var counter_container = \"counter-container\";\n\n      if (this.props.coun.blocked) {\n        counter_container += \" blocked\";\n      }\n\n      console.log(this.props.id);\n      console.log(this.props.ind);\n      console.log(this.props.coun);\n      return React.createElement(\"div\", {\n        className: counter_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.coun.clickCount), React.createElement(\"button\", {\n        className: \"Delete-button\",\n        onClick: function onClick() {\n          _this2.handleSelected(_this2.props.ind);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: \"Reset-button\",\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"button\", {\n        className: \"Block-button\",\n        onClick: this.block,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Block\"));\n    }\n  }]);\n\n  return CounterContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count,\n    listCounters: state.listCounters\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onDeleteCounter: function onDeleteCounter(indexCounter) {\n      dispatch({\n        type: 'DELETE_COUNTER',\n        indexCounter: indexCounter\n      });\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CounterContainer));","map":{"version":3,"sources":["/Users/alvaroramirez/Documents/Practica-Redux/contador-app/src/components/counter-container/counter-container.js"],"names":["React","Component","connect","withRouter","CounterContainer","props","increase","state","blocked","isFirst","setState","firstTime","firstClick","Date","clickCount","lastClick","reset","block","details","history","push","handleSelected","bind","indexCounter","onDeleteCounter","counter_container","coun","console","log","id","ind","mapStateToProps","count","listCounters","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './counter-container.css';\nimport {withRouter} from 'react-router-dom';\n\nclass CounterContainer extends Component {\n\n\n\n    constructor(props) {\n        super(props);\n\n        \n\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n\n    increase = () => {\n        if (!this.state.blocked) {\n            if(this.state.isFirst){\n                this.setState(({firstTime}) => ({\n                    firstClick: new Date() \n                }));\n                this.setState(({isFirst}) => ({\n                    isFirst: false \n                }));\n            }\n            this.setState(({ clickCount }) => ({\n                clickCount: clickCount + 1\n            }));\n            this.setState(({ lastClick }) => ({\n                lastClick: new Date()\n            }));\n\n        }\n\n    };\n    reset = () => {\n        this.setState(({ clickCount }) => ({\n            clickCount: 0\n        }));\n    }\n    block = () => {\n        this.setState(({ blocked }) => ({\n            blocked: !(this.state.blocked)\n        }));\n    }\n    details = () => {\n        this.props.history.push(`/details`);\n    }\n\n    handleSelected(indexCounter) {\n        this.props.onDeleteCounter(indexCounter);\n    }\n\n    render() {\n        let counter_container = \"counter-container\"\n        if (this.props.coun.blocked) {\n            counter_container += \" blocked\"\n        }\n        console.log(this.props.id);\n        console.log(this.props.ind);\n        console.log(this.props.coun);\n        return (\n            <div className={counter_container}>\n                <button >{this.props.coun.clickCount}</button>\n                <button className=\"Delete-button\" onClick={() => { this.handleSelected(this.props.ind) }}>Delete</button>\n                <button className=\"Reset-button\" onClick={this.reset}>Reset</button>\n                <button className=\"Block-button\" onClick={this.block}>Block</button>\n                \n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.count,\n        listCounters: state.listCounters\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onDeleteCounter: (indexCounter) => {\n            dispatch({ type: 'DELETE_COUNTER', indexCounter });\n        }\n    };\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CounterContainer));"]},"metadata":{},"sourceType":"module"}